<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>Archetype Created Web Application</display-name>
  <!-- 用于启动  持久层和业务层  的spring容器   start-->
  
  <!-- 指定配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext.xml</param-value>
  </context-param>
  <!-- 声明监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 用于启动  持久层和业务层  的spring容器   end-->
  
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 用于启动 WEB层 的spring容器 start --><!-- WEB层spring容器是持久层和业务层spring容器的子容器 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:springMVC-mvc.xml</param-value>
    </init-param>
    <!-- 用于启动 WEB层 的spring容器 end -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!-- 拦截根目录下所有请求，交由DispatcherServlet处理 -->
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>  